@tailwind components;
@tailwind utilities;

/* ----------------- COMPOSITLY -------------------- */
/* -------------------- DOC -------------------- */
/* 
  This file contains the styles for the components of the Compositly project.
  The styles are divided into sections, each section has a comment with the name of the component.
  This input.css file is compiled into the output.cc by tailwind when yarn css is run.
  This is very convenient, because in a library we don't want multiple files for styles that
  have to be imported in the components. This way, we can have all the styles in one file.
  So, things like animations or punctual styles can be added here if needed or can not be done
  with tailwindcss.

  Aside from that, the primary objective of this file is to manage certain styles that depend on
  tailwind's base classes. Is it to say, when in the input.css we add @tailwind base, it 
  generates base styles and variables that not only dictate how the elements look, but also 
  how they behave. This may sound as ideal, but for us NO. This is essentially a tailwind reset
  that we can't control.
  When compiling the library in another project, like our dashboard, the styles there may be 
  broken because of the fact that the base variables generated by @tailwind base are the same
  as the ones in the dashboard. At this moment, this same thing is happening on the sdk-react.
  If the client uses tailwindcss in their project, the styles of the client or the sdk-react
  may be broken because of the same reason. 
  So, to avoid this, we have to create our own classes that override the base classes of tailwind.
  These variables are of the type --tw-*, and the base styles may dictate how elements like inputs, 
  buttons, etc. look and behave, and since our components are used in multiple projects, we want 
  to have full control over the styles of our components.
  Just so that it is easy to understand, the type of variables created by tailwind are --tw-*, 
  and are used in this way:
  1.- They are declared: 
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x:  ;
      --tw-pan-y:  ;
      --tw-ring-inset:  ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      ...
  2.- They are used in this way: 
      .shadow-xl {
        --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
        --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
        }
        .ring-1 {
          --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
          --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
          box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
        }       
        .ring-2 {
          --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
          --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
          box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
        }       
        .ring-inset {
          --tw-ring-inset: inset;
        } 
  ** As you can see, they are not only dependant on the @tailwind base variables, but they also repeat the 
  same property (box-shadow in this case) multiple times. This is not efficient.
  This is why we have base classes setting the variables and property of each styles, and then we have
  the classes that use these variables. This way, we can have full control over the styles of our components 
  by using our variables and setting the property only once.

  There are some properties that heavily rely on the base classes of tailwind, some of them are:
  - box-shadow (ring and shadow)
  - transform (translate, rotate, skew, scale)
  - backdrop-filter
  - ::before and ::after
  - etc.

  For the sake of this doc, we are going to take the transform property as an example.
  So, when an element uses a tranform based property, the first thing we have to do is to set the
  base classes that set the variables of the transform property. This is done in the following way:
  .bal-ba-transform-base {
    --bal-tw-translate-x: 0;
    --bal-tw-translate-y: 0;
    --bal-tw-rotate: 0;
    --bal-tw-skew-x: 0;
    --bal-tw-skew-y: 0;
    --bal-tw-scale-x: 1;
    --bal-tw-scale-y: 1;
    transform: translate(var(--bal-tw-translate-x), var(--bal-tw-translate-y))
      rotate(var(--bal-tw-rotate)) skewX(var(--bal-tw-skew-x))
      skewY(var(--bal-tw-skew-y)) scaleX(var(--bal-tw-scale-x))
      scaleY(var(--bal-tw-scale-y));
  }
  This is the base class that sets the variables of the transform property. Then, we have the classes that
  use these variables (which are transform-based properties):
  .bal-ba-translate-x-0 {
    --bal-tw-translate-x: 0px;
  }
  .bal-ba-translate-x-1 {
    --bal-tw-translate-x: 0.25rem;
  }
  .bal-ba-scale-100,
  .bal-ba-hover-scale-100:hover,
  .bal-ba-focus-scale-100:focus,
  .bal-ba-focus-within-scale-100:focus-within,
  .bal-ba-active-scale-100:active {
    --bal-tw-scale-x: 1;
    --bal-tw-scale-y: 1;
  }
  .bal-ba-scale-95,
  .bal-ba-hover-scale-95:hover,
  .bal-ba-focus-scale-95:focus,
  .bal-ba-focus-within-scale-95:focus-within,
  .bal-ba-active-scale-95:active {
    --bal-tw-scale-x: 0.95;
    --bal-tw-scale-y: 0.95;
  }

  So, if we want <button> element to scale when clicked, we would need to add the following classes:

  <button className='bal-ba-transform-base bal-ba-active-scale-95:active'>Click me</button>

  This way, we can have full control over the styles of our components. And it is ease to understand 
  and intuitive to use. 
  A component that uses the transform property in our project is <InputBase />, which is the input 
  with a floating label. The floating label is a label that moves up when the input is focused, and moves
  down when the placeholder is shown. This is done with the transform property. Search for bal-ba-floating-label-base 
  and have a look into <InputBase /> to see how it is used, we have bal-ba-transform-base and then the classes
  bal-ba-floating-label-base bal-ba-floating-label-outlined which make changes in the variables of the transform property.

  A second example, is the ring and shadow properties. It works in the same way as the transform property.
  This time if I have a <button> with ring properties, I would need to add the following classes:

  <button className='bal-ba-ring-base bal-ba-ring bal-ba-ring-1 bal-ba-shadow-base bal-ba-shadow-md'>Click me</button>

  In the case of ring, if we want to use bal-ba-ring-{number}, we need to add bal-ba-ring to the element.

  ** NOMENCLATURE: **
    - bal-ba-{property}-base: This is the base class that sets the variables of the property.
    - bal-ba-{property}-{variant}: This is the class that uses the variables set by the base class.
    - bal-ba-{hover/focus/active/focus-within}-{property}-{variant}: This is the class that uses the 
    variables set by the base class when the element is hovered, focused, active, or focused within.


  ** What if we want to use a property that is not defined? **

  Like, for example, a ring with the yellow color?
  Fine, we have two options, whether we are using this on this project or another, like the dashboard:

  1.- We can add the class to the input.css file, like this:
    .bal-ba-ring-yellow-400 {
      --bal-tw-ring-color: #facc15;
    }

  2.- We can add a css class that modifies the color variable of the ring where we want to use it:
  For example we are using the BtnBase in dashboard and we want to use the ring-green-400, which is not defined
  on the input.css file, we can add the following class to the dashboard:
  <BtnBase 
    ringClassNames='ring-green-400'
  />
  // Dashboard.css
  .ring-green-400,
  .hover-ring-green-400:hover,
  .focus-ring-green-400:focus {
    --bal-tw-ring-color: #4ade80;
  }


  ** We just have to be careful with the nomenclature.
  - The nomenclature of the variable should be --bal-tw-{property}-color (see the ring classes to maintin consistency, please).
  - If defined in this project the nomenclature of the class should be bal-ba-{property}-{color}. 
  - If defined in another project, the nomenclature of the class should be as you wish, just make sure to use the 
    correct nomenclature for the variable.
  - If we want to add styles when the element is hovered, focused, active, or focused within, we should add the 
    hover, focus, active, or focus-within to the class name afterwards like this 
      .{className}:focus {
        --bal-tw-{property}-color: #4ade80;
      } 

  As a reference, you can see BtnBase stories or in the dashboard for ring styles, InputBase or 
  DropdornSearchAnimatedBase for floating label DropdownPickerAnimatedBase for shadow styles, 
  DatePickerMobile for transform styles, DropdownNotifications for scale when active styles, etc.

*/

/* -------------------- ROOT STYLES -------------------- */
:root {
  /* Marketing Department */
  --bal-primary-10: #f3f8fb;
  --bal-primary-50: #bddffc;
  --bal-primary-90: #acd4e4;
  --bal-primary-100: #89c2d9;
  --bal-primary-200: #7baec3;
  --bal-primary-300: #61a5c2;
  --bal-primary-350: #8cc7fa;
  --bal-primary-400: #46aaff;
  --bal-primary-500: #1961a4;
  --bal-primary-600: #00509a;
  --bal-primary-700: #004e98;
  --bal-primary-800: #003e79;
  --bal-primary-900: #00296b;

  --bal-checkmark-fill-color: #7ac142;
}

/* -------------------- BA DEV STYLES -------------------- */
.bal-ba-border {
  border: 1px solid red !important;
}
/* Add to a stories component if we wish */
.bal-ba-font * {
  font-family:
    ui-sans-serif,
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    'Helvetica Neue',
    Arial,
    'Noto Sans',
    sans-serif,
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol',
    'Noto Color Emoji';
}

/* -------------------- SCROLLBAR STYLES -------------------- */
/* Hide scrollbar for Chrome, Safari and Opera */
.bal-ba-no-scrollbar::-webkit-scrollbar {
  display: none;
}
/* Hide scrollbar for IE, Edge and Firefox */
.bal-ba-no-scrollbar {
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
  /* Firefox */
}
/* This scrollbar base needs to be used in each scrollbar
and then we can change variants */
.bal-ba-scroll-base {
  --bal-tw-scrollbar-width: 4px;
  --bal-tw-scrollbar-height: 100%;
  --bal-tw-scrollbar-border-radius: 2px;
  --bal-tw-scrollbar-scroll-behavior: smooth;

  --bal-tw-scrollbar-track-background: #d6e2e9;
  --bal-tw-scrollbar-track-border-radius: 4px;

  --bal-tw-scrollbar-thumb-background: #99c1de;
  --bal-tw-scrollbar-thumb-border-radius: 2px;

  --bal-tw-scrollbar-thumb-hover-background: #6096ba;
  scroll-behavior: var(--bal-tw-scrollbar-scroll-behavior);
}
/* width */
.bal-ba-scroll-base::-webkit-scrollbar {
  width: var(--bal-tw-scrollbar-width);
  height: var(--bal-tw-scrollbar-height);
  border-radius: var(--bal-tw-scrollbar-border-radius);
}
/* Track */
.bal-ba-scroll-base::-webkit-scrollbar-track {
  background: var(--bal-tw-scrollbar-track-background);
  border-radius: var(--bal-tw-scrollbar-track-border-radius);
}
/* Handle */
.bal-ba-scroll-base::-webkit-scrollbar-thumb {
  background: var(--bal-tw-scrollbar-thumb-background);
  border-radius: var(--bal-tw-scrollbar-thumb-border-radius);
  transition: background 0.5s ease-in-out;
}
/* Handle on hover */
.bal-ba-scroll-base::-webkit-scrollbar-thumb:hover {
  background: var(--bal-tw-scrollbar-thumb-hover-background);
}
/* SIZES */
.bal-ba-scroll-big {
  --bal-tw-scrollbar-width: 6px;
  --bal-tw-scrollbar-height: 100%;
  --bal-tw-scrollbar-border-radius: 3px;
}
.bal-ba-scroll-2xl {
  --bal-tw-scrollbar-width: 8px;
  --bal-tw-scrollbar-height: 100%;
  --bal-tw-scrollbar-border-radius: 4px;
}
.bal-ba-scroll-4xl {
  --bal-tw-scrollbar-width: 12px;
  --bal-tw-scrollbar-height: 100%;
  --bal-tw-scrollbar-border-radius: 6px;
}

/* HORIZONTAL SCROLL */
.bal-ba-scroll-horizontal::-webkit-scrollbar {
  --bal-tw-scrollbar-width: 100%;
  --bal-tw-scrollbar-height: 4px;
}
@media (max-width: 659px) {
  .bal-ba-max-659-scroll-horizontal {
    --bal-tw-scrollbar-width: 100%;
    --bal-tw-scrollbar-height: 4px;
  }
}
/* DD NOTIFICATIONS SCROLL */
.bal-ba-scroll-notifications::-webkit-scrollbar {
  --bal-tw-scrollbar-width: 6px;
  --bal-tw-scrollbar-border-radius: 6px;
}
.bal-ba-scroll-notifications::-webkit-scrollbar-track {
  --bal-tw-scrollbar-track-border-radius: 6px;
}
.bal-ba-scroll-notifications::-webkit-scrollbar-thumb {
  --bal-tw-scrollbar-thumb-border-radius: 3px;
}

/* -------------------- TRANSFORM STYLES -------------------- */
/* This transform-bas needs to be used in each element that 
transforms, like the floating-label below */
.bal-ba-transform-base {
  --bal-tw-translate-x: 0;
  --bal-tw-translate-y: 0;
  --bal-tw-rotate: 0;
  --bal-tw-skew-x: 0;
  --bal-tw-skew-y: 0;
  --bal-tw-scale-x: 1;
  --bal-tw-scale-y: 1;
  transform: translate(var(--bal-tw-translate-x), var(--bal-tw-translate-y))
    rotate(var(--bal-tw-rotate)) skewX(var(--bal-tw-skew-x))
    skewY(var(--bal-tw-skew-y)) scaleX(var(--bal-tw-scale-x))
    scaleY(var(--bal-tw-scale-y));
}
.bal-ba-translate-x-0 {
  --bal-tw-translate-x: 0px;
}
.bal-ba-translate-x-1 {
  --bal-tw-translate-x: 0.25rem;
}
.bal-ba-translate-x-2 {
  --bal-tw-translate-x: 0.5rem;
}
.bal-ba-translate-x-3 {
  --bal-tw-translate-x: 0.75rem;
}
.bal-ba-translate-x-4 {
  --bal-tw-translate-x: 1rem;
}
.bal-ba-translate-x-5 {
  --bal-tw-translate-x: 1.25rem;
}
.bal-ba-translate-x-6 {
  --bal-tw-translate-x: 1.5rem;
}
.bal-ba-translate-x-7 {
  --bal-tw-translate-x: 1.75rem;
}
.bal-ba-translate-x-8 {
  --bal-tw-translate-x: 2rem;
}
.bal-ba-translate-y-0 {
  --bal-tw-translate-y: 0px;
}
.bal-ba-translate-y-1 {
  --bal-tw-translate-y: 0.25rem;
}
.bal-ba-translate-y-2 {
  --bal-tw-translate-y: 0.5rem;
}
.bal-ba-translate-y-3 {
  --bal-tw-translate-y: 0.75rem;
}
.bal-ba-translate-y-4 {
  --bal-tw-translate-y: 1rem;
}
.bal-ba-translate-y-5 {
  --bal-tw-translate-y: 1.25rem;
}
.bal-ba-translate-y-6 {
  --bal-tw-translate-y: 1.5rem;
}
.bal-ba-translate-y-7 {
  --bal-tw-translate-y: 1.75rem;
}
.bal-ba-translate-y-8 {
  --bal-tw-translate-y: 2rem;
}
.bal-ba-scale-110,
.bal-ba-hover-scale-110:hover,
.bal-ba-focus-scale-110:focus,
.bal-ba-focus-within-scale-110:focus-within,
.bal-ba-active-scale-110:active {
  --bal-tw-scale-x: 1.1;
  --bal-tw-scale-y: 1.1;
}
.bal-ba-scale-100,
.bal-ba-hover-scale-100:hover,
.bal-ba-focus-scale-100:focus,
.bal-ba-focus-within-scale-100:focus-within,
.bal-ba-active-scale-100:active {
  --bal-tw-scale-x: 1;
  --bal-tw-scale-y: 1;
}
.bal-ba-scale-95,
.bal-ba-hover-scale-95:hover,
.bal-ba-focus-scale-95:focus,
.bal-ba-focus-within-scale-95:focus-within,
.bal-ba-active-scale-95:active {
  --bal-tw-scale-x: 0.95;
  --bal-tw-scale-y: 0.95;
}
.bal-ba-scale-75,
.bal-ba-hover-scale-75:hover,
.bal-ba-focus-scale-75:focus,
.bal-ba-focus-within-scale-75:focus-within,
.bal-ba-active-scale-75:active {
  --bal-tw-scale-x: 0.75;
  --bal-tw-scale-y: 0.75;
}
.bal-ba-scale-50,
.bal-ba-hover-scale-50:hover,
.bal-ba-focus-scale-50:focus,
.bal-ba-focus-within-scale-50:focus-within,
.bal-ba-active-scale-50:active {
  --bal-tw-scale-x: 0.5;
  --bal-tw-scale-y: 0.5;
}

@media (min-width: 640px) {
  .bal-ba-min-w-640-translate-y-0 {
    --bal-tw-translate-y: 0px;
  }
  .bal-ba-min-w-640-scale-100 {
    --bal-tw-scale-x: 1;
    --bal-tw-scale-y: 1;
  }
  .bal-ba-min-w-640-scale-95 {
    --bal-tw-scale-x: 0.95;
    --bal-tw-scale-y: 0.95;
  }
}

/* -------------------- RING STYLES - SHADOW STYLES -------------------- */
/**
 * The ring is a box shadow that helps the user understand
 * what element is currently focused.
 * When using the ring in a component, we should use bal-ba-ring-base,
 * to set the base styles and variables.
 * If we want to use bal-ba-ring with a specific width, we should use
 * bal-ba-ring and then bal-ba-ring-1, bal-ba-ring-2, etc.
 * ------
 * And the same for the shadow, we should use bal-ba-shadow-base
 * and then select the shadow we want to use.
 */
.bal-ba-ring-base,
.bal-ba-hover-ring-base:hover,
.bal-ba-focus-ring-base:focus,
.bal-ba-shadow-base,
.bal-ba-hover-shadow-base:hover,
.bal-ba-focus-shadow-base:focus {
  --bal-tw-ring-inset:  ;
  --bal-tw-ring-offset-width: 0px;
  --bal-tw-ring-offset-color: #fff;
  --bal-tw-ring-color: rgb(59 130 246 / 0.5);
  --bal-tw-ring-offset-shadow: 0 0 #0000;
  --bal-tw-ring-shadow: 0 0 #0000;
  --bal-tw-shadow: 0 0 #0000;
  --bal-tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--bal-tw-ring-offset-shadow), var(--bal-tw-ring-shadow),
    var(--bal-tw-shadow, 0 0 #0000);
}
/* ----- RING STYLES ----- */
/* Should be used for bal-ba-ring-0, bal-ba-ring-1, etc.  */
.bal-ba-ring {
  --bal-tw-ring-offset-shadow: var(--bal-tw-ring-inset) 0 0 0
    var(--bal-tw-ring-offset-width) var(--bal-tw-ring-offset-color);
}
.bal-ba-ring-0,
.bal-ba-hover-ring-0:hover,
.bal-ba-focus-ring-0:focus,
.bal-ba-focus-within-ring-0:focus-within,
.bal-ba-active-ring-0:active {
  --bal-tw-ring-shadow: var(--bal-tw-ring-inset) 0 0 0
    calc(0px + var(--bal-tw-ring-offset-width)) var(--bal-tw-ring-color);
}
.bal-ba-ring-1,
.bal-ba-hover-ring-1:hover,
.bal-ba-focus-ring-1:focus,
.bal-ba-focus-within-ring-1:focus-within,
.bal-ba-active-ring-1:active {
  --bal-tw-ring-shadow: var(--bal-tw-ring-inset) 0 0 0
    calc(1px + var(--bal-tw-ring-offset-width)) var(--bal-tw-ring-color);
}
.bal-ba-ring-2,
.bal-ba-hover-ring-2:hover,
.bal-ba-focus-ring-2:focus,
.bal-ba-focus-within-ring-2:focus-within,
.bal-ba-active-ring-2:active {
  --bal-tw-ring-shadow: var(--bal-tw-ring-inset) 0 0 0
    calc(2px + var(--bal-tw-ring-offset-width)) var(--bal-tw-ring-color);
}
.bal-ba-ring-3,
.bal-ba-hover-ring-3:hover,
.bal-ba-focus-ring-3:focus,
.bal-ba-focus-within-ring-3:focus-within,
.bal-ba-active-ring-3:active {
  --bal-tw-ring-shadow: var(--bal-tw-ring-inset) 0 0 0
    calc(3px + var(--bal-tw-ring-offset-width)) var(--bal-tw-ring-color);
}
.bal-ba-ring-4,
.bal-ba-hover-ring-4:hover,
.bal-ba-focus-ring-4:focus,
.bal-ba-focus-within-ring-4:focus-within,
.bal-ba-active-ring-4:active {
  --bal-tw-ring-shadow: var(--bal-tw-ring-inset) 0 0 0
    calc(4px + var(--bal-tw-ring-offset-width)) var(--bal-tw-ring-color);
}
/* Ring inset styles */
.bal-ba-ring-inset,
.bal-ba-hover-ring-inset:hover,
.bal-ba-focus-ring-inset:focus,
.bal-ba-focus-within-ring-inset:focus-within,
.bal-ba-active-ring-inset:active {
  --bal-tw-ring-inset: inset;
}
/* Ring offset */
.bal-ba-ring-offset-0,
.bal-ba-hover-ring-offset-0:hover,
.bal-ba-focus-ring-offset-0:focus,
.bal-ba-focus-within-ring-offset-0:focus-within,
.bal-ba-active-ring-offset-0:active {
  --bal-tw-ring-offset-width: 0px;
}
.bal-ba-ring-offset-1,
.bal-ba-hover-ring-offset-1:hover,
.bal-ba-focus-ring-offset-1:focus,
.bal-ba-focus-within-ring-offset-1:focus-within,
.bal-ba-active-ring-offset-1:active {
  --bal-tw-ring-offset-width: 1px;
}
.bal-ba-ring-offset-2,
.bal-ba-hover-ring-offset-2:hover,
.bal-ba-focus-ring-offset-2:focus,
.bal-ba-focus-within-ring-offset-2:focus-within,
.bal-ba-active-ring-offset-2:active {
  --bal-tw-ring-offset-width: 2px;
}
/* Ring colors */
.bal-ba-ring-primary-100,
.bal-ba-hover-ring-primary-100:hover,
.bal-ba-focus-ring-primary-100:focus,
.bal-ba-focus-within-ring-primary-100:focus-within {
  --bal-tw-ring-color: var(--bal-primary-100);
}
.bal-ba-ring-primary-200,
.bal-ba-hover-ring-primary-200:hover,
.bal-ba-focus-ring-primary-200:focus,
.bal-ba-focus-within-ring-primary-200:focus-within {
  --bal-tw-ring-color: var(--bal-primary-200);
}
.bal-ba-ring-primary-300,
.bal-ba-hover-ring-primary-300:hover,
.bal-ba-focus-ring-primary-300:focus,
.bal-ba-focus-within-ring-primary-300:focus-within {
  --bal-tw-ring-color: var(--bal-primary-300);
}
.bal-ba-ring-primary-400,
.bal-ba-hover-ring-primary-400:hover,
.bal-ba-focus-ring-primary-400:focus {
  --bal-tw-ring-color: var(--bal-primary-400);
}
.bal-ba-ring-primary-500,
.bal-ba-hover-ring-primary-500:hover,
.bal-ba-focus-ring-primary-500:focus {
  --bal-tw-ring-color: var(--bal-primary-500);
}
.bal-ba-ring-primary-600,
.bal-ba-hover-ring-primary-600:hover,
.bal-ba-focus-ring-primary-600:focus {
  --bal-tw-ring-color: var(--bal-primary-600);
}
.bal-ba-ring-primary-700,
.bal-ba-hover-ring-primary-700:hover,
.bal-ba-focus-ring-primary-700:focus {
  --bal-tw-ring-color: var(--bal-primary-700);
}
.bal-ba-ring-primary-800,
.bal-ba-hover-ring-primary-800:hover,
.bal-ba-focus-ring-primary-800:focus {
  --bal-tw-ring-color: var(--bal-primary-800);
}
.bal-ba-ring-primary-900,
.bal-ba-hover-ring-primary-900:hover,
.bal-ba-focus-ring-primary-900:focus {
  --bal-tw-ring-color: var(--bal-primary-900);
}
.bal-ba-ring-gray-300,
.bal-ba-hover-ring-gray-300:hover,
.bal-ba-focus-ring-gray-300:focus {
  --bal-tw-ring-color: #d1d5db;
}
.bal-ba-ring-slate-400,
.bal-ba-hover-ring-slate-400:hover,
.bal-ba-focus-ring-slate-400:focus {
  --bal-tw-ring-color: #94a3b8;
}
.bal-ba-ring-green-400,
.bal-ba-hover-ring-green-400:hover,
.bal-ba-focus-ring-green-400:focus {
  --bal-tw-ring-color: #4ade80;
}
.bal-ba-ring-green-500,
.bal-ba-hover-ring-green-500:hover,
.bal-ba-focus-ring-green-500:focus {
  --bal-tw-ring-color: #22c55e;
}
.bal-ba-ring-blue-300,
.bal-ba-hover-ring-blue-300:hover,
.bal-ba-focus-ring-blue-300:focus {
  --bal-tw-ring-color: #93c5fd;
}
.bal-ba-ring-blue-400,
.bal-ba-hover-ring-blue-400:hover,
.bal-ba-focus-ring-blue-400:focus {
  --bal-tw-ring-color: #60a5fa;
}
.bal-ba-ring-blue-500,
.bal-ba-hover-ring-blue-500:hover,
.bal-ba-focus-ring-blue-500:focus {
  --bal-tw-ring-color: #3b82f6;
}
.bal-ba-ring-blue-600,
.bal-ba-hover-ring-blue-600:hover,
.bal-ba-focus-within-ring-blue-600:focus-within {
  --bal-tw-ring-color: #2563eb;
}
.bal-ba-ring-puple-400,
.bal-ba-hover-ring-puple-400:hover,
.bal-ba-focus-ring-puple-400:focus {
  --bal-tw-ring-color: #c084fc;
}
.bal-ba-ring-red-400,
.bal-ba-hover-ring-red-400:hover,
.bal-ba-focus-ring-red-400:focus {
  --bal-tw-ring-color: #f87171;
}
.bal-ba-ring-red-500,
.bal-ba-hover-ring-red-500:hover,
.bal-ba-focus-ring-red-500:focus {
  --bal-tw-ring-color: #ef4444;
}
.bal-ba-ring-orange-400,
.bal-ba-hover-ring-orange-400:hover,
.bal-ba-focus-ring-orange-400:focus {
  --bal-tw-ring-color: #fb923c;
}
/* ----- SHADOW STYLES ----- */
.bal-ba-shadow,
.bal-ba-hover-shadow:hover,
.bal-ba-focus-shadow:focus {
  --bal-tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --bal-tw-shadow-colored: 0 1px 3px 0 var(--bal-tw-shadow-color),
    0 1px 2px -1px var(--bal-tw-shadow-color);
}
.bal-ba-shadow-sm,
.bal-ba-hover-shadow-sm:hover,
.bal-ba-focus-shadow-sm:focus {
  --bal-tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --bal-tw-shadow-colored: 0 1px 2px 0 var(--bal-tw-shadow-color);
}
.bal-ba-shadow-top-sm,
.bal-ba-hover-shadow-top-sm:hover,
.bal-ba-focus-shadow-top-sm:focus {
  --bal-tw-shadow: 0 -1px 2px 0 rgb(0 0 0 / 0.05);
  --bal-tw-shadow-colored: 0 -1px 2px 0 var(--bal-tw-shadow-color);
}
.bal-ba-shadow-md,
.bal-ba-hover-shadow-md:hover,
.bal-ba-focus-shadow-md:focus {
  --bal-tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1),
    0 2px 4px -2px rgb(0 0 0 / 0.1);
  --bal-tw-shadow-colored: 0 4px 6px -1px var(--bal-tw-shadow-color),
    0 2px 4px -2px var(--bal-tw-shadow-color);
}
.bal-ba-shadow-top-md,
.bal-ba-hover-shadow-top-md:hover,
.bal-ba-focus-shadow-top-md:focus {
  --bal-tw-shadow: 0 -4px 6px -1px rgb(0 0 0 / 0.1),
    0 -2px 4px -2px rgb(0 0 0 / 0.1);
  --bal-tw-shadow-colored: 0 -4px 6px -1px var(--bal-tw-shadow-color),
    0 -2px 4px -2px var(--bal-tw-shadow-color);
}
.bal-ba-shadow-lg,
.bal-ba-hover-shadow-lg:hover,
.bal-ba-focus-shadow-lg:focus {
  --bal-tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  --bal-tw-shadow-colored: 0 10px 15px -3px var(--bal-tw-shadow-color),
    0 4px 6px -4px var(--bal-tw-shadow-color);
}
.bal-ba-shadow-xl,
.bal-ba-hover-shadow-xl:hover,
.bal-ba-focus-shadow-xl:focus {
  --bal-tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1),
    0 8px 10px -6px rgb(0 0 0 / 0.1);
  --bal-tw-shadow-colored: 0 20px 25px -5px var(--bal-tw-shadow-color),
    0 8px 10px -6px var(--bal-tw-shadow-color);
}
.bal-ba-shadow-none,
.bal-ba-hover-shadow-none:hover,
.bal-ba-focus-shadow-none:focus {
  --bal-tw-shadow: 0 0 #0000;
  --bal-tw-shadow-colored: 0 0 #0000;
  box-shadow:
    0 0 #0000,
    0 0 #0000,
    0 0 #0000;
}
.bal-ba-shadow-gray-300,
.bal-ba-hover-shadow-gray-300:hover,
.bal-ba-focus-shadow-gray-300:focus {
  --bal-tw-shadow-color: #d1d5db;
  --bal-tw-shadow: var(--bal-tw-shadow-colored);
}
.bal-ba-shadow-gray-500,
.bal-ba-hover-shadow-gray-500:hover,
.bal-ba-focus-shadow-gray-500:focus {
  --bal-tw-shadow-color: #6b7280;
  --bal-tw-shadow: var(--bal-tw-shadow-colored);
}
.bal-ba-shadow-gray-800,
.bal-ba-hover-shadow-gray-800:hover,
.bal-ba-focus-shadow-gray-800:focus {
  --bal-tw-shadow-color: #1f2937;
  --bal-tw-shadow: var(--bal-tw-shadow-colored);
}
.bal-ba-shadow-black,
.bal-ba-hover-shadow-black:hover,
.bal-ba-focus-shadow-black:focus {
  --bal-tw-shadow-color: #000;
  --bal-tw-shadow: var(--bal-tw-shadow-colored);
}

/* -------------------- BACKDROP BLUR STYLES -------------------- */
.bal-ba-backdrop-blur-base {
  --bal-tw-backdrop-blur:  ;
  --bal-tw-backdrop-brightness:  ;
  --bal-tw-backdrop-contrast:  ;
  --bal-tw-backdrop-grayscale:  ;
  --bal-tw-backdrop-hue-rotate:  ;
  --bal-tw-backdrop-invert:  ;
  --bal-tw-backdrop-opacity:  ;
  --bal-tw-backdrop-saturate:  ;
  --bal-tw-backdrop-sepia:  ;
  -webkit-backdrop-filter: var(--bal-tw-backdrop-blur)
    var(--bal-tw-backdrop-brightness) var(--bal-tw-backdrop-contrast)
    var(--bal-tw-backdrop-grayscale) var(--bal-tw-backdrop-hue-rotate)
    var(--bal-tw-backdrop-invert) var(--bal-tw-backdrop-opacity)
    var(--bal-tw-backdrop-saturate) var(--bal-tw-backdrop-sepia);
  backdrop-filter: var(--bal-tw-backdrop-blur) var(--bal-tw-backdrop-brightness)
    var(--bal-tw-backdrop-contrast) var(--bal-tw-backdrop-grayscale)
    var(--bal-tw-backdrop-hue-rotate) var(--bal-tw-backdrop-invert)
    var(--bal-tw-backdrop-opacity) var(--bal-tw-backdrop-saturate)
    var(--bal-tw-backdrop-sepia);
}
.bal-ba-backdrop-blur-none,
.bal-ba-hover-backdrop-blur-none:hover,
.bal-ba-focus-backdrop-blur-none:focus {
  --bal-tw-backdrop-blur: blur(0);
}
.bal-ba-backdrop-blur-sm,
.bal-ba-hover-backdrop-blur-sm:hover,
.bal-ba-focus-backdrop-blur-sm:focus {
  --bal-tw-backdrop-blur: blur(4px);
}
.bal-ba-backdrop-blur,
.bal-ba-hover-backdrop-blur:hover,
.bal-ba-focus-backdrop-blur:focus {
  --bal-tw-backdrop-blur: blur(8px);
}
.bal-ba-backdrop-blur-md,
.bal-ba-hover-backdrop-blur-md:hover,
.bal-ba-focus-backdrop-blur-md:focus {
  --bal-tw-backdrop-blur: blur(12px);
}
.bal-ba-backdrop-blur-lg,
.bal-ba-hover-backdrop-blur-lg:hover,
.bal-ba-focus-backdrop-blur-lg:focus {
  --bal-tw-backdrop-blur: blur(16px);
}
.bal-ba-backdrop-blur-xl,
.bal-ba-hover-backdrop-blur-xl:hover,
.bal-ba-focus-backdrop-blur-xl:focus {
  --bal-tw-backdrop-blur: blur(24px);
}
.bal-ba-backdrop-blur-2xl,
.bal-ba-hover-backdrop-blur-2xl:hover,
.bal-ba-focus-backdrop-blur-2xl:focus {
  --bal-tw-backdrop-blur: blur(40px);
}
.bal-ba-backdrop-blur-3xl,
.bal-ba-hover-backdrop-blur-3xl:hover,
.bal-ba-focus-backdrop-blur-3xl:focus {
  --bal-tw-backdrop-blur: blur(64px);
}

/* -------------------- FLOATING LABEL STYLES -------------------- */
/* The elements will need bal-ba-transform-base. */
/* The elements may need bal-ba-floating-label-base 
and then a specific variant if needed. */
.bal-ba-floating-label-base {
  --bal-tw-scale-x: 0.75;
  --bal-tw-scale-y: 0.75;
}
.bal-ba-floating-input-base:placeholder-shown ~ .bal-ba-floating-label-base {
  --bal-tw-scale-x: 1;
  --bal-tw-scale-y: 1;
}
@media (min-width: 335px) {
  .bal-ba-floating-input-base:placeholder-shown ~ .bal-ba-floating-label-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .bal-ba-floating-input-base:placeholder-shown ~ .bal-ba-floating-label-base-text-sm {
    font-size: 0.875rem;
  line-height: 1.25rem;
  }
}
.bal-ba-floating-input-base:focus ~ .bal-ba-floating-label-base {
  --bal-tw-scale-x: 0.75;
  --bal-tw-scale-y: 0.75;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.bal-ba-floating-input-base:focus
  ~ .bal-ba-floating-label-base:where([dir='rtl'], [dir='rtl'] *) {
  --bal-tw-translate-x: 25%;
}
/* Customized floating label styles */
/* Floating label of InputBase */
.bal-ba-floating-input-outlined:placeholder-shown
  ~ .bal-ba-floating-label-outlined {
  --bal-tw-translate-y: -50%;
}

.bal-ba-floating-label-small-outlined {
  --bal-tw-translate-y: -0.75rem /* -12px */;
}

.bal-ba-floating-input-outlined:focus ~ .bal-ba-floating-label-small-outlined {
  --bal-tw-translate-y: -0.75rem /* -12px */;
}

.bal-ba-floating-label-base-medium-outlined {
  --bal-tw-translate-y: -1rem /* -16px */;
}

.bal-ba-floating-input-outlined:focus
  ~ .bal-ba-floating-label-base-medium-outlined {
  --bal-tw-translate-y: -1rem /* -16px */;
}

/* NO OUTLINED */
.bal-ba-floating-label {
  --bal-tw-translate-y: -1.5rem;
}

.bal-ba-floating-input:placeholder-shown ~ .bal-ba-floating-label {
  --bal-tw-translate-y: 0;
}

.bal-ba-floating-input:focus ~ .bal-ba-floating-label {
  --bal-tw-translate-y: -1.25rem;
}

/* FLOATING LABEL FOR DropdownSearchAnimatedBase */
.bal-ba-floating-label-ds {
  --bal-tw-translate-y: -1rem /* 16px */;
}

.bal-ba-floating-input-ds:placeholder-shown ~ .bal-ba-floating-label-ds {
  --bal-tw-translate-y: -50%;
}

.bal-ba-floating-input-ds:focus ~ .bal-ba-floating-label-ds {
  --bal-tw-translate-y: -1rem /* 16px */;
}

/* -------------------- TABLE STYLES -------------------- */
.bal-ba-table-row-base,
.bal-ba-table-section-row-base {
  transition: all 0.2s ease-in-out;
}
.bal-ba-table-section-row-base {
  background-color: var(--bal-primary-10);
  --bal-tw-ring-inset: ;
  --bal-tw-ring-offset-width: 0px;
  --bal-tw-ring-offset-color: #fff;
  /* hover:ring-[var(--bal-primary-200)] */
  --bal-tw-ring-color: var(--bal-primary-300);
  --bal-tw-ring-offset-shadow: 0 0 #0000;
  /* hover:ring-2 */
  --bal-tw-ring-shadow: 0 2px 0 0 var(--bal-tw-ring-color),
    0 -2px 0 0 var(--bal-tw-ring-color); /* Top and bottom border effect */
  /* hover:shadow-lg */
  --bal-tw-shadow: 0 0px 0px 0px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  box-shadow: var(--bal-tw-ring-offset-shadow), var(--bal-tw-ring-shadow),
    var(--bal-tw-shadow, 0 0 #0000);
}
.bal-ba-table-section-row-base:hover {
  background-color: #e9f2f8;
  --bal-tw-ring-color: var(--bal-primary-300);
}
.bal-ba-hover-table-row:hover {
  background-color: #f7fafc;
  --bal-tw-ring-inset: ;
  --bal-tw-ring-offset-width: 0px;
  --bal-tw-ring-offset-color: #fff;
  /* hover:ring-[var(--bal-primary-200)] */
  --bal-tw-ring-color: var(--bal-primary-100);
  --bal-tw-ring-offset-shadow: 0 0 #0000;
  /* hover:ring-2 */
  --bal-tw-ring-shadow: 0 2px 0 0 var(--bal-tw-ring-color),
    0 -2px 0 0 var(--bal-tw-ring-color); /* Top and bottom border effect */
  /* hover:shadow-lg */
  --bal-tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  --bal-tw-shadow-colored: 0 10px 15px -3px var(--bal-tw-shadow-color),
    0 4px 6px -4px var(--bal-tw-shadow-color);
  transition: all 0.2s ease-in-out;
  box-shadow: var(--bal-tw-ring-offset-shadow), var(--bal-tw-ring-shadow),
    var(--bal-tw-shadow, 0 0 #0000);
}

.bal-ba-checked-table-row {
  background-color: #f7fafc;
  --bal-tw-ring-inset: ;
  --bal-tw-ring-offset-width: 0px;
  --bal-tw-ring-offset-color: #fff;
  /* hover:ring-[var(--bal-primary-200)] */
  --bal-tw-ring-color: var(--bal-primary-100);
  --bal-tw-ring-offset-shadow: 0 0 #0000;
  /* hover:ring-2 */
  --bal-tw-ring-shadow: 0 2px 0 0 var(--bal-tw-ring-color),
    0 -2px 0 0 var(--bal-tw-ring-color); /* Top and bottom border effect */
  box-shadow: var(--bal-tw-ring-offset-shadow), var(--bal-tw-ring-shadow),
    var(--bal-tw-shadow, 0 0 #0000);
}
.bal-ba-checked-table-row:hover {
  background-color: #F1F8FE;
}

.bal-ba-ring-table-header {
  --bal-tw-ring-inset: inset;
  --bal-tw-ring-offset-width: 0px;
  --bal-tw-ring-offset-color: #fff;
  --bal-tw-ring-color: var(--bal-primary-100);
  --bal-tw-ring-offset-shadow: 2px 0 #0000;
  --bal-tw-ring-shadow: 0 2px 0 0 var(--bal-primary-100); /* Bottom border effect */
  --bal-tw-shadow: 0 2px 0 0 var(--bal-primary-100); /* Bottom border effect */
  --bal-tw-shadow-colored: 0 2px 0 0 var(--bal-primary-100); /* Bottom border effect */
}

/* -------------------- ::BEFORE - ::AFTER STYLES -------------------- */
.bal-ba-before-empty-content::before {
  content: '';
}
.bal-ba-after-empty-content::after {
  content: '';
}
.bal-ba-before-absolute::before {
  position: absolute;
}
.bal-ba-before-left-0::before {
  left: 0px;
}
.bal-ba-before-top-22::before {
  top: 22px;
}
.bal-ba-before-h-3::before {
  height: 0.75rem;
}
.bal-ba-before-border-l-2::before {
  border-left-width: 2px;
  border-top-width: 0px;
  border-bottom-width: 0px;
  border-right-width: 0px;
}
.bal-ba-before-border-solid::before {
  border-style: solid;
  transition: all 0.2s ease-in-out;
}
.bal-ba-before-border-gray-200::before {
  border-color: #e5e7eb;
}
.bal-ba-after-absolute::after {
  position: absolute;
}
.bal-ba-after-right-0::after {
  right: 0px;
}
.bal-ba-after-top-22::after {
  top: 22px;
}
.bal-ba-after-h-3::after {
  height: 0.75rem;
}
.bal-ba-after-border-r-2::after {
  border-right-width: 2px;
  border-top-width: 0px;
  border-bottom-width: 0px;
  border-left-width: 0px;
}
.bal-ba-after-border-solid::after {
  border-style: solid;
  transition: all 0.2s ease-in-out;
}
.bal-ba-after-border-gray-200::after {
  border-color: #e5e7eb;
}

/* -------------------- OUTLINE STYLES -------------------- */
/* NO OUTLINE CLASSES */
.bal-ba-outline-none {
  -webkit-tap-highlight-color: transparent;
  outline: none;
}

.bal-ba-outline-none:focus,
.bal-ba-outline-none:active {
  outline: none;
}

/* -------------------- ERRORS STYLES -------------------- */
/* CLASSES FOR ERRORS IN INPUT */
.bal-ba-error-text::before {
  display: inline;
  content: '⚠ ';
}

.bal-ba-error-text {
  color: #ef4444;
  font-size: 0.75rem;
  line-height: 1rem;
  text-align: center;
}

.bal-ba-info-text {
  color: #4b5563;
}

.bal-ba-info-text-blue-styles {
  color: var(--bal-primary-600);
}

.bal-ba-error-text-invisible {
  font-size: 0.75rem;
  line-height: 1rem;
  opacity: 0;
}

/* -------------------- TRANSITIONS STYLES -------------------- */
.bal-ba-transition-150 {
  transition: all 0.15s ease-in-out;
}

.bal-ba-transition-2 {
  transition: all 0.2s ease-in-out;
}

.bal-ba-transition-3 {
  transition: all 0.3s ease-in-out;
}
.bal-ba-transition-4 {
  transition: all 0.4s ease-in-out;
}
.bal-ba-transition-5 {
  transition: all 0.5s ease-in-out;
}

/* -------------------- BOX SHADOWS STYLES -------------------- */
.bal-ba-blue-inner-shadow {
  -webkit-box-shadow: inset 0px 0px 5px 0px rgba(137, 194, 217, 1);
  -moz-box-shadow: inset 0px 0px 5px 0px rgba(137, 194, 217, 1);
  box-shadow: inset 0px 0px 5px 0px rgba(137, 194, 217, 1);
}

/* -------------------- BUTTONS STYLES -------------------- */
/* CLASSES FOR inputs/BtnSubmit */
.bal-ba-btn-submit {
  border-radius: 0.5rem;
  height: 2.5rem;
  width: 10rem;
  padding: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
  transition: all 0.3s ease-out;
  background-image: linear-gradient(
    to right,
    #04193d,
    #103463,
    #19518c,
    #1971b7,
    #0693e3
  );
  border: 1px solid white;
  color: white;
  transition: transform 0.3s ease-out;
}
.bal-ba-btn-submit:hover {
  transform: scale(1.03);
  cursor: pointer;
}
.bal-ba-btn-submit:hover:active {
  transform: scale(1.05);
}

.bal-ba-btn-submit:hover:disabled {
  transform: none;
  cursor: not-allowed;
}

.bal-ba-btn-submit:disabled {
  background-image: none;
  cursor: default;
  border-width: 2px;
  border-color: #d1d5db; /* This is the equivalent of Tailwind's gray-300 */
  background-color: transparent;
  color: #d1d5db; /* This is the equivalent of Tailwind's gray-300 */
  transition-property: all;
  transition-duration: 150ms;
}

.bal-ba-btn-submit:disabled:hover {
  border-color: #9ca3af; /* This is the equivalent of Tailwind's gray-400 */
  color: #9ca3af; /* This is the equivalent of Tailwind's gray-400 */
}

/* -------------------- CheckboxAnimated STYLES -------------------- */
/* CLASSES FOR inputs/CheckboxAnimated */

.bal-ba-checkbox-animated-input:checked ~ .bal-ba-input-check {
  animation: bal-ba-animate-bounce 0.5s ease-in-out;
}

.bal-ba-input-check::before {
  content: '';
  position: absolute;
  top: 3px;
  left: 2px;
  width: 12px;
  height: 6px;
  border-bottom: 3px solid #e9ecef;
  border-left: 3px solid #e9ecef;
  transform: scale(0) rotate(-45deg);
  transition: 0.5s;
}

.bal-ba-input-check-big::before {
  top: 5px;
  left: 3px;
  width: 16px;
  height: 8px;
}

.bal-ba-checkbox-animated-input:checked ~ .bal-ba-input-check::before {
  transform: scale(1) rotate(-45deg);
}

/* -------------------- RadioSelector STYLES -------------------- */
.bal-ba-radio-selector-input:active ~ .bal-ba-radio-selector-label {
  --bal-tw-shadow: 0 0 0 4px rgb(186 230 253 / 0.5);
  --bal-tw-shadow-colored: 0 0 0 4px var(--bal-tw-shadow-color);
}

/* -------------------- ICONS STYLES -------------------- */

/* CLASSES OF COMPONENT icons/ArrowIcon */
.bal-ba-arrow {
  transform: translate(-50%, -50%);
  transform: rotate(90deg);
}

.bal-ba-arrow span {
  transform: rotate(45deg);
}

.bal-ba-arrow-left span {
  animation: bal-ba-animate-left 2s infinite;
}

.bal-ba-arrow-right span {
  animation: bal-ba-animate-right 2s infinite;
}

.bal-ba-arrow span:nth-child(2) {
  animation-delay: -0.2s;
}

.bal-ba-arrow span:nth-child(3) {
  animation-delay: -0.4s;
}

/* CLASSES FOR icons/CheckmarkIcon */
.bal-ba-checkmark {
  stroke-miterlimit: 10;
  animation:
    bal-fill 0.4s ease-in-out 0.4s forwards,
    bal-scale 0.3s ease-in-out 0.9s both;
}

.bal-ba-checkmark-circle {
  stroke-dasharray: 166;
  stroke-dashoffset: 166;
  stroke-miterlimit: 10;
  fill: none;
  animation: bal-stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}

.bal-ba-checkmark-check {
  transform-origin: 50% 50%;
  stroke-dasharray: 48;
  stroke-dashoffset: 48;
  animation: bal-stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}
/* ICON ARROW DOWN */
.bal-chevron-arrow-down {
  position: absolute;
  width: 28px;
  height: 6.4px;
  opacity: 0;
  transform: scale(0.3);
  animation: bal-move-chevron 3s ease-out infinite;
}

.bal-chevron-arrow-down:first-child {
  animation: bal-move-chevron 3s ease-out 1s infinite;
}

.bal-chevron-arrow-down:nth-child(2) {
  animation: bal-move-chevron 3s ease-out 2s infinite;
}

.bal-chevron-arrow-down:before,
.bal-chevron-arrow-down:after {
  content: '';
  position: absolute;
  top: 0;
  height: 100%;
  width: 50%;
  background: #7f1d1d;
}

.bal-chevron-arrow-down-blue:before,
.bal-chevron-arrow-down-blue:after {
  background: #1961a4;
}

.bal-chevron-arrow-down:before {
  left: 0;
  transform: skewY(30deg);
}

.bal-chevron-arrow-down:after {
  right: 0;
  width: 50%;
  transform: skewY(-30deg);
}

/* ------ CLASSNAMES FOR SECTIONWRAPPERBASE ------- */
.section-wrapper-base-fieldset:hover > .section-wrapper-base-legend::before {
  border-color: #d1d5db;
}
.section-wrapper-base-fieldset:hover > .section-wrapper-base-legend::after {
  border-color: #d1d5db;
}

/* -------------------- ANIMATIONS STYLES -------------------- */
/* ANIMATIONS FOR icons/ArrowIcon */
@keyframes bal-ba-animate-left {
  0% {
    opacity: 0;
    transform: rotate(45deg) translate(-20px, -20px);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: rotate(45deg) translate(17px, 17px);
  }
}

@keyframes bal-ba-animate-right {
  0% {
    opacity: 0;
    transform: rotate(45deg) translate(48px, 46px);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: rotate(45deg) translate(8px, 8px);
  }
}

/* ANIMATIONS FOR inputs/CheckboxAnimated */

@keyframes bal-ba-animate-bounce {
  0% {
    transform: scale(1);
  }
  40% {
    transform: scale(1.3, 0.7);
  }
  55% {
    transform: scale(1);
  }
  70% {
    transform: scale(1.2, 0.8);
  }
  80% {
    transform: scale(1);
  }
  90% {
    transform: scale(1.1, 0.9);
  }
  100% {
    transform: scale(1);
  }
}

/* ANIMATION FOR icons/CheckmarkIcon */

@keyframes bal-stroke {
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes bal-scale {
  0%,
  100% {
    transform: none;
  }
  50% {
    transform: scale3d(1.1, 1.1, 1);
  }
}

@keyframes bal-fill {
  100% {
    box-shadow: inset 0 0 0 100vh var(--bal-checkmark-fill-color);
  }
}

/* ANIMATION FOR ARROW DOWN */

@keyframes bal-move-chevron {
  25% {
    opacity: 1;
  }
  33.3% {
    opacity: 1;
    transform: translateY(30.4px);
  }
  66.6% {
    opacity: 1;
    transform: translateY(41.6px);
  }
  100% {
    opacity: 0;
    transform: translateY(64px) scale(0.5);
  }
}

/* -------------------- MEDIA QUERIES - RESPONSIVE STYLES -------------------- */
@media (min-width: 400px) {
  .bal-ba-1xsm-before-top-6::before {
    top: 1.5rem;
  }
  .bal-ba-1xsm-after-top-6::after {
    top: 1.5rem;
  }
}
@media (min-width: 565px) {
  .bal-ba-2xsm1-before-h-5::before {
    height: 1.25rem;
  }
  .bal-ba-2xsm1-after-h-5::after {
    height: 1.25rem;
  }
}
